# Generated by Django 5.2.4 on 2025-07-07 06:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_jalali.db.models
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('_created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('_updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('more_phone_numbers', models.TextField(blank=True, null=True)),
                ('telegram_id', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.IntegerField(blank=True, choices=[(1, 'مرد'), (2, 'زن'), (3, 'دیگر')], db_index=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)])),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('education', models.IntegerField(blank=True, choices=[(1, 'کمتر از کارشناسی'), (2, 'کارشناسی'), (3, 'کارشناسی ارشد'), (4, 'دکتری و بالاتر'), (5, 'دیگر')], null=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('english_first_name', models.CharField(blank=True, db_index=True, max_length=50)),
                ('english_last_name', models.CharField(blank=True, db_index=True, max_length=50)),
                ('referer_name', models.CharField(blank=True, max_length=100)),
                ('national_id', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('referer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-_created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CrmUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('_updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('last_follow_up', django_jalali.db.models.jDateTimeField(blank=True, db_index=True, null=True)),
                ('next_follow_up', django_jalali.db.models.jDateTimeField(blank=True, db_index=True, null=True)),
                ('joined_main_group', models.BooleanField(db_index=True, default=False)),
                ('crm_description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'نیاز به پیگیری'), (2, 'در حال پیگیری'), (3, 'پیگیری شده')], db_index=True, default=3)),
                ('supporting_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supported_users', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='crm_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-_created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('_updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('action', models.IntegerField(choices=[(1, 'تماس موفق'), (2, 'تماس ناموفق'), (3, 'پیامک ارسال شد'), (4, 'تلگرام ارسال شد')], db_index=True, default=1)),
                ('date', django_jalali.db.models.jDateTimeField(blank=True, db_index=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crm_logs', to=settings.AUTH_USER_MODEL)),
                ('crm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='users.crmuser')),
            ],
            options={
                'ordering': ['-_created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Orgnization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('_updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('contact_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacted_organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-_created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='orgnization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orgnization_users', to='users.orgnization'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['first_name'], name='users_user_first_n_0186c7_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_name'], name='users_user_last_na_4e2935_idx'),
        ),
    ]
